[{"/home/player/vscode/MERN/pagination/frontend/src/index.js":"1","/home/player/vscode/MERN/pagination/frontend/src/App.js":"2","/home/player/vscode/MERN/pagination/frontend/src/components/userList.js":"3"},{"size":262,"mtime":1663575020789,"results":"4","hashOfConfig":"5"},{"size":158,"mtime":1663576518581,"results":"6","hashOfConfig":"5"},{"size":4026,"mtime":1663580192801,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eqg9qj",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/home/player/vscode/MERN/pagination/frontend/src/index.js",[],[],"/home/player/vscode/MERN/pagination/frontend/src/App.js",[],[],"/home/player/vscode/MERN/pagination/frontend/src/components/userList.js",["18","19"],[],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport ReactPaginate from 'react-paginate'\n\nconst UserList = () => {\n    const [users, setUsers] = useState([]);\n    const [page, setPage] = useState(0);\n    const [limit, setLimits] = useState(10);\n    const [pages, setPages] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [keyword, setKeywords] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [msg, setMsg] = useState(\"\");\n\n    // use effect for render react app\n    useEffect(() => {\n        getUsers();\n    },[page, keyword]);\n\n    // hit api with axios\n    const getUsers = async() => {\n        const response = await axios.get(`http://localhost:3030/users?search=${keyword}&page=${page}&limit=${limit}`);\n        setUsers(response.data.datas);\n        setPage(response.data.page);\n        setPages(response.data.totalPages);\n        setRows(response.data.totalRows);\n        // console.log(response.data.datas);\n    };\n\n    const changePage = ({ selected }) => {\n        setPage(selected);\n        selected === 9 ? \n            setMsg(\"Jika data yang dicari tidak ditemukan, silahkan cari dengan kata kunci spesifik!\") : \n            setMsg(\"\") ;\n    };\n\n    const searchData = (e) => {\n        e.preventDefault();\n        setPage(0);\n        setKeywords(query);\n    };\n\n  return (\n    <div className=\"container mt-5\">\n        <div className=\"columns\">\n            <div className=\"column is-centered\"> {/* column centered start */}\n                <form onSubmit={searchData}>\n                    <div className=\"field has-addons\">\n                        <div className=\"control is-expanded\">\n                            <input type=\"text\" className=\"input\" placeholder=\"Find Something here\" \n                            value={query}\n                            onChange={(e) => setQuery(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"control\">\n                            <button type=\"submit\" className=\"button is-info\">Search</button>\n                        </div>\n                    </div>\n                </form>\n            <table className=\"table is-striped is-bordered is-fullwidth mt-2\"> {/* table start */}\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Gender</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((u) => (\n                        <tr key={u.id}>\n                            <td>{u.id}</td>\n                            <td>{u.name}</td>\n                            <td>{u.email}</td>\n                            <td>{u.gender}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <p>Total Rows :{rows} Page :{rows ? page + 1 : 0} of {pages}</p>\n            <p className='has-text-centered has-text-danger mb-2'>{msg}</p>\n            <nav className=\"pagination is-centered\" \n                 role=\"navigation\"\n                 aria-label=\"pagination\"\n                 key={rows}\n                 >\n                    <ReactPaginate\n                        previousLabel={\"< Prev\"}\n                        nextLabel={\"Next >\"}\n                        pageCount={Math.min(10, pages)}\n                        onPageChange={changePage}\n                        containerClassName={\"pagination-list\"}\n                        pageLinkClassName={\"pagination-link\"}\n                        previousLinkClassName={\"pagination-previous\"}\n                        nextLinkClassName={\"pagination-next\"}\n                        activeLinkClassName={\"pagination-link is-current\"}\n                        disabledLinkClassName={\"pagination-link is-disabled\"}\n                    />\n            </nav>\n            </div> {/* column centered end */}\n        </div>\n    </div>\n  )\n}\n\nexport default UserList",{"ruleId":"20","severity":1,"message":"21","line":8,"column":19,"nodeType":"22","messageId":"23","endLine":8,"endColumn":28},{"ruleId":"24","severity":1,"message":"25","line":18,"column":7,"nodeType":"26","endLine":18,"endColumn":22,"suggestions":"27"},"no-unused-vars","'setLimits' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [page, keyword, getUsers]",{"range":"31","text":"32"},[579,594],"[page, keyword, getUsers]"]